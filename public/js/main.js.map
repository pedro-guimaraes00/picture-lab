{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/app/post.service.ts","./src/app/post.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\r\nimport { Post } from './post';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\r\nimport { PostService } from './post.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'myapp';\r\n  public post: Post[];\r\n\r\n  constructor(public dialog: MatDialog, public postService: PostService) {}\r\n\r\n  ngOnInit() {\r\n    this.post = this.postService.post;\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(PostDialogComponent, {\r\n      width: '600px'\r\n    });\r\n    dialogRef.afterClosed().subscribe(\r\n      (result) => {\r\n        if(result) {\r\n          this.postService.save(result.post, result.arquivo);\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<p>\r\n  <mat-toolbar color=\"primary\">\r\n    <button mat-icon-button class=\"example-icon\" aria-label=\"icon-button menu\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <span>PICTURE.lab Â©</span>\r\n    <span class=\"example-spacer\"></span>\r\n  </mat-toolbar>\r\n</p>\r\n\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\" > \r\n  <app-post *ngFor = \"let p of post\" [post]=\"p\"></app-post>\r\n</div>\r\n\r\n<button class=\"float-button\" mat-fab color=\"primary\" (click)=\"openDialog()\">\r\n  <mat-icon>add</mat-icon>\r\n</button>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button'; \r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { PostComponent } from './post/post.component';\r\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PostComponent,\r\n    PostDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatDialogModule,\r\n    MatChipsModule,\r\n    MatBadgeModule,\r\n\r\n  ],\r\n  providers: [\r\n    \r\n  ],\r\n\r\n  entryComponents: [\r\n    PostDialogComponent\r\n  ],\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Post } from '../post';\r\n\r\n@Component({\r\n  selector: 'app-post-dialog',\r\n  templateUrl: './post-dialog.component.html',\r\n  styleUrls: ['./post-dialog.component.css']\r\n})\r\nexport class PostDialogComponent implements OnInit {\r\n  \r\n  public nomearquivo: string='';\r\n\r\n  public dados = {\r\n    post: new Post(\"\", \"\", \"\", \"\", \"\",\"\"),\r\n    arquivo: null\r\n  };\r\n\r\n  constructor(\r\n      public dialogref: MatDialogRef<PostDialogComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  mudouarquivo($event) {\r\n    this.nomearquivo = (event.target as HTMLInputElement).files[0].name;\r\n    this.dados.arquivo = (event.target as HTMLInputElement).files[0];\r\n  }\r\n\r\n  salvar() {\r\n    this.dialogref.close(this.dados);\r\n  }\r\n\r\n  cancelar() {\r\n    this.dialogref.close(null);\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\" >\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n        <mat-form-field fxFlex=\"50\">\r\n            <mat-label>Seu nome</mat-label>\r\n                <input matInput [(ngModel)]=\"dados.post.nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex=\"40\">\r\n            <mat-label>Seu e-mail</mat-label>\r\n                <input matInput [(ngModel)]=\"dados.post.email\">\r\n        </mat-form-field>\r\n    </div>    \r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n        <mat-form-field fxFlex=\"50\">\r\n            <mat-label>TÃ­tulo da mensagem</mat-label>\r\n                <input matInput [(ngModel)]=\"dados.post.titulo\">\r\n        </mat-form-field>\r\n    \r\n        <mat-form-field fxFlex=\"40\">\r\n            <mat-label>SubtÃ­tulo da mensagem</mat-label>\r\n                <input matInput [(ngModel)]=\"dados.post.subtitulo\">\r\n        </mat-form-field>    \r\n    </div>\r\n    \r\n    <mat-form-field>\r\n        <textarea matInput placeholder=\"Escreva aqui sua mensagem\"\r\n                    [(ngModel)]=\"dados.post.mensagem\"></textarea>\r\n    </mat-form-field>  \r\n\r\n</div>\r\n\r\n\r\n<input type=\"file\" style=\"display: none;\" (change)=\"mudouarquivo($event)\" #fileinput>\r\n\r\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\r\n    <mat-icon>add_a_photo</mat-icon> Adicionar foto\r\n</button>\r\n\r\n<p *ngIf = \"nomearquivo!=''\">\r\n    <strong>Arquivo: </strong>{{nomearquivo}}\r\n    <mat-icon color=\"primary\">done</mat-icon>\r\n</p>\r\n\r\n\r\n<div style=\"text-align: center;\">\r\n        <button mat-button color=\"primary\" (click)=\"salvar()\">Salvar</button>\r\n        <button mat-button color=\"warn\" (click)=\"cancelar()\">Cancelar</button>\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  public post: Post[] = [];\n\n  constructor(private http: HttpClient) { \n    this.http.get('/api').subscribe(\n      (post: any[]) => {\n        for(let p of post) {\n          this.post.push(\n            new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n          )\n        }\n      }\n    );\n  }\n\n  save(post: Post, file: File) {\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('email', post.email);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n\n    this.http.post('/api', uploadData, { reportProgress: true, observe: 'events'})\n      .subscribe((event: any) => {\n          if(event.type == HttpEventType.Response) {\n            console.log(event);\n          }\n    })\n  }\n\n}\n","export class Post {\r\n    constructor (\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ) {}\r\n}","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Post } from '../post';\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.css']\r\n})\r\nexport class PostComponent implements OnInit {\r\n\r\n  @Input() post: Post;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card fxFlex class=\"card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar></div>\r\n      <mat-card-title>{{ post.titulo }}</mat-card-title>\r\n      <mat-card-subtitle>{{ post.subtitulo }}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <img mat-card-image src=\"/storage/{{ post.arquivo }}\" alt=\"photo\">\r\n    <mat-card-content>\r\n      <p>\r\n        {{ post.mensagem }}\r\n      </p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-button>\r\n          <mat-icon>thumb_up_alt</mat-icon>\r\n      </button>\r\n      <button mat-button>\r\n          <mat-icon>share</mat-icon>\r\n        </button>\r\n    </mat-card-actions>\r\n</mat-card>\r\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}